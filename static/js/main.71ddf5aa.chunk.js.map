{"version":3,"sources":["pages/login/login.jpg","pages/editar.png","pages/excluir.png","pages/login/Login.js","actions/index.js","componentes/Header.js","pages/FormAlteracao.js","pages/FormInclusao.js","pages/Wallet/Wallet.js","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","Login","onHeandleChange","target","value","name","setState","isHabilitButton","validEmail","email","state","test","validPassword","password","length","prevState","isDesible","onClick","props","history","addEmailAction","push","this","className","src","LoginImg","alt","htmlFor","data-testid","id","type","onChange","disabled","React","Component","connect","dispatch","payload","Header","constTotal","total","expensesList","reduce","acumulador","valor","moeda","exchangeRates","currency","ask","Number","toFixed","emailProps","user","wallet","expenses","FormAlteracao","onHandleChange","description","siglas","onClickDespesas","method","text","tag","defaultValue","map","sigla","key","selected","FormInclusao","Wallet","a","listDespesas","addListCorrices","prev","onClickAlterar","dispachSalvarEdit","buttonEdit","event","expense","dispachEditDespesa","prencheInput","edit","listExpenses","removeItem","console","log","scope","imgEdit","width","imgExcluir","defaultProps","currencies","fetch","then","response","json","siglasFiltradas","Object","keys","filter","despesas","dispesa","despesaEdit","App","exact","path","component","Boolean","window","location","hostname","match","INITIAL_STATE","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.71ddf5aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.eed66231.jpg\";","module.exports = __webpack_public_path__ + \"static/media/editar.c50bc969.png\";","module.exports = __webpack_public_path__ + \"static/media/excluir.837c7aa4.png\";","import PropTypes from 'prop-types';\nimport React from 'react';\nimport './login.css';\nimport { connect } from 'react-redux';\nimport LoginImg from './login.jpg';\nimport { addEmail } from '../../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      isDesible: true,\n    };\n  }\n\n onHeandleChange = ({ target }) => {\n   const { value, name } = target;\n   this.setState({\n     [name]: value,\n   }, () => this.isHabilitButton());\n }\n\n  validEmail = () => {\n    const { email } = this.state;\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\n    return emailRegex.test(email);\n  }\n\n  validPassword = () => {\n    const { password } = this.state;\n    const PASSWORD_LENGTH = 6;\n    if (password.length >= PASSWORD_LENGTH) {\n      return true;\n    }\n    return false;\n  }\n\n  isHabilitButton = () => {\n    if (this.validPassword() && this.validEmail()) {\n      this.setState((prevState) => ({ ...prevState, isDesible: false }));\n    } else {\n      this.setState((prevState) => ({ ...prevState, isDesible: true }));\n    }\n  }\n\n  onClick = () => {\n    const { history, addEmailAction } = this.props;\n    const { email } = this.state;\n    addEmailAction(email);\n    history.push('/carteira');\n  }\n\n  render() {\n    const { email, password, isDesible } = this.state;\n    return (\n      <div className=\"all-container-login\">\n        <h2 className=\"title-login\">Login</h2>\n        <div className=\"section-login\">\n\n          <div className=\"login-left\"><img src={ LoginImg } alt=\"img login\" /></div>\n          <form className=\"login-rigth\">\n            <label htmlFor=\"email\">\n              Email:\n              <input\n                data-testid=\"email-input\"\n                name=\"email\"\n                id=\"email\"\n                type=\"email\"\n                value={ email }\n                onChange={ this.onHeandleChange }\n              />\n            </label>\n            <label htmlFor=\"passsword\">\n              Senha:\n              <input\n                data-testid=\"password-input\"\n                name=\"password\"\n                id=\"passwoerd\"\n                type=\"password\"\n                value={ password }\n                onChange={ this.onHeandleChange }\n              />\n            </label>\n            <div className=\"button-center\">\n              <button\n                id=\"submit\"\n                type=\"button\"\n                disabled={ isDesible }\n                onClick={ this.onClick }\n              >\n                Entrar\n              </button>\n\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  addEmailAction: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addEmailAction: (email) => dispatch(addEmail(email)),\n});\nexport default connect(null, mapDispatchToProps)(Login);\n","// Coloque aqui suas actions\nconst addEmail = (payload) => ({\n  type: 'ADD_EMAIL', payload,\n});\n\nconst addDepesas = (payload) => ({\n  type: 'ADD_DEPESAS', payload,\n});\nconst removeDepesa = (payload) => ({\n  type: 'REMOVE_DEPESA', payload,\n});\nconst editDispesa = (payload) => ({\n  type: 'EDIT_DESPESA', payload,\n});\n\nconst fecthCorrencies = (payload) => ({\n  type: 'FECTH_CORRENCIES', payload,\n});\n\nconst salvarEdit = (payload) => ({\n  type: 'SALVE_EDIT', payload,\n});\nconst fecthApiCorrencies = () => (dispatch) => fetch('https://economia.awesomeapi.com.br/json/all')\n  .then((response) => response.json())\n  .then((currencies) => {\n    const siglas = Object.keys(currencies);\n    const siglasFiltradas = siglas.filter((sigla) => sigla !== 'USDT');\n    dispatch(fecthCorrencies(siglasFiltradas));\n    // return dispatch(fecthCorrencies(currencies));\n    return currencies;\n  });\n\nexport { addEmail, fecthApiCorrencies, addDepesas, removeDepesa, editDispesa, salvarEdit };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './header.css';\n\nclass Header extends React.Component {\n  constTotal = () => {\n    const { expensesList } = this.props;\n    const total = expensesList.reduce((acumulador, valor) => {\n      const moeda = (valor.exchangeRates[valor.currency].ask);\n      return acumulador + Number(valor.value) * moeda;\n    }, 0);\n\n    return Number(total).toFixed(2);\n    // console.log(expensesList);\n  }\n\n  render() {\n    const { emailProps } = this.props;\n    return (\n      <div className=\"all-conatiner-info\">\n        <h1 className=\"title-wallet\">TrybeWallet</h1>\n        <div className=\"info-left\">\n          <p\n            data-testid=\"email-field\"\n            className=\"div-email\"\n          >\n            email:\n            {' '}\n            {emailProps || 'email@gmail'}\n\n          </p>\n\n          <div data-testid=\"total-field\" className=\"div-field\">{this.constTotal()}</div>\n          <div data-testid=\"header-currency-field\" className=\"div-curreny\">BRL</div>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    emailProps: state.user.email,\n    expensesList: state.wallet.expenses,\n  };\n}\nHeader.propTypes = {\n  emailProps: PropTypes.string.isRequired,\n  expensesList: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired)\n    .isRequired).isRequired,\n};\nexport default connect(mapStateToProps, null)(Header);\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nclass FormAlteracao extends React.Component {\n  render() {\n    const { value, onHandleChange,\n      description, siglas, onClickDespesas, method, text, tag } = this.props;\n    return (\n      <form className=\"container-form\">\n        <label htmlFor=\"value-input\">\n          Valor:\n          <input\n            id=\"value-input\"\n            data-testid=\"value-input\"\n            type=\"number\"\n            name=\"value\"\n            value={ value }\n            onChange={ onHandleChange }\n            className=\"value-input\"\n          />\n        </label>\n        <label htmlFor=\"description-input\">\n          Descrição:\n          <input\n            id=\"description-input\"\n            data-testid=\"description-input\"\n            type=\"text\"\n            name=\"description\"\n            value={ description }\n            onChange={ onHandleChange }\n          />\n        </label>\n        <label htmlFor=\"select-sigla\">\n          Moeda:\n          <select\n            name=\"currency\"\n            data-testid=\"currency-input\"\n            onChange={ onHandleChange }\n            id=\"select-sigla\"\n            defaultValue={ siglas.map((sigla) => (sigla === value)) }\n          >\n            { siglas.map((sigla) => (\n              <option\n                key={ sigla }\n                value={ sigla }\n              >\n                {sigla}\n\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          <select\n            name=\"method\"\n            id=\"method\"\n            onChange={ onHandleChange }\n            data-testid=\"method-input\"\n            defaultValue={ method === value }\n          >\n            <option\n              value=\"Dinheiro\"\n\n            >\n              Dinheiro\n\n            </option>\n            <option\n              value=\"Cartão de crédito\"\n\n            >\n              Cartão de crédito\n\n            </option>\n            <option\n              value=\"Cartão de débito\"\n\n            >\n              Cartão de débito\n\n            </option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Categoria:\n          <select\n            name=\"tag\"\n            id=\"tag\"\n            onChange={ onHandleChange }\n            data-testid=\"tag-input\"\n\n          >\n            <option\n              value=\"Alimentação\"\n              selected={ tag === 'Alimentação' }\n            >\n              Alimentação\n\n            </option>\n            <option\n              value=\"Lazer\"\n              selected={ tag === 'Lazer' }\n            >\n              Lazer\n\n            </option>\n            <option\n              value=\"Trabalho\"\n              selected={ tag === 'Trabalho' }\n            >\n              Trabalho\n\n            </option>\n            <option\n              value=\"Transporte\"\n              selected={ tag === 'Transporte' }\n            >\n              Transporte\n\n            </option>\n            <option value=\"Saúde\" selected={ tag === 'Saúde' }>Saúde</option>\n          </select>\n        </label>\n        <button\n          type=\"button\"\n          id=\"button-despesas\"\n          onClick={ onClickDespesas }\n        >\n          {text}\n        </button>\n      </form>\n    );\n  }\n}\nFormAlteracao.propTypes = {\n  value: PropTypes.string.isRequired,\n  onHandleChange: PropTypes.func.isRequired,\n  description: PropTypes.string.isRequired,\n  siglas: PropTypes.arrayOf(PropTypes.string).isRequired,\n  method: PropTypes.string.isRequired,\n  // currency: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  onClickDespesas: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\nexport default FormAlteracao;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport './FormInclusao.css';\n\nclass FormInclusao extends React.Component {\n  render() {\n    const { value, onHandleChange,\n      description, siglas, onClickDespesas, text } = this.props;\n    return (\n      <form className=\"container-form\">\n      \n        <label htmlFor=\"value-input\">\n        <span> Valor</span>\n          <input\n            id=\"value-input\"\n            data-testid=\"value-input\"\n            type=\"number\"\n            name=\"value\"\n            value={ value }\n            onChange={ onHandleChange }\n            className=\"value-input\"\n          />\n        </label>\n        <label htmlFor=\"description-input\">\n          <span>Descrição</span>\n          <input\n            id=\"description-input\"\n            data-testid=\"description-input\"\n            type=\"text\"\n            name=\"description\"\n            value={ description }\n            onChange={ onHandleChange }\n            className=\"description-input\"\n          />\n        </label>\n        \n        <label htmlFor=\"select-sigla\">\n          <span>Moeda</span>\n          <select\n            className=\"select\"\n            name=\"currency\"\n            data-testid=\"currency-input\"\n            onChange={ onHandleChange }\n            id=\"select-sigla\"\n          >\n            { siglas.map((currency) => (\n              <option key={ currency } value={ currency }>{currency}</option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          <span>Método</span>\n          <select\n            name=\"method\"\n            id=\"method\"\n            onChange={ onHandleChange }\n            data-testid=\"method-input\"\n            className=\"select\"\n          >\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            <option value=\"Cartão de débito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          <span>Categoria</span>\n          <select\n            name=\"tag\"\n            id=\"tag\"\n            onChange={ onHandleChange }\n            data-testid=\"tag-input\"\n            className=\"select\"\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n        <button\n          type=\"button\"\n          id=\"button-despesas\"\n          className=\"button-despesas\"\n          onClick={ onClickDespesas }\n        >\n          {text}\n        </button>\n      </form>\n    );\n  }\n}\nFormInclusao.propTypes = {\n  value: PropTypes.string.isRequired,\n  onHandleChange: PropTypes.func.isRequired,\n  description: PropTypes.string.isRequired,\n  siglas: PropTypes.arrayOf(PropTypes.string).isRequired,\n  method: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  onClickDespesas: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\nexport default FormInclusao;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fecthApiCorrencies, addDepesas, removeDepesa,\n  editDispesa, salvarEdit } from '../../actions';\nimport Header from '../../componentes/Header';\nimport FormAlteracao from '../FormAlteracao';\nimport FormInclusao from '../FormInclusao';\nimport './Wallet.css';\nimport imgEdit from '../editar.png';\nimport imgExcluir from '../excluir.png';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: -1,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n    };\n  }\n\n  async componentDidMount() {\n    const { addListCorrices } = this.props;\n    await addListCorrices();\n  }\n\n  onClickDespesas = async () => {\n    const { listDespesas, addListCorrices } = this.props;\n    const exchangeRates = await addListCorrices();\n    this.setState((prev) => ({ ...prev, id: prev.id + 1, exchangeRates }));\n    listDespesas(this.state);\n    this.setState((prev) => ({ ...prev, value: '', description: '' }));\n  }\n\n  onClickAlterar = async () => {\n    const { dispachSalvarEdit } = this.props;\n    await dispachSalvarEdit(this.state);\n  };\n\n  onHandleChange = ({ target }) => {\n    const { value, name } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  buttonEdit = async (event, expense) => {\n    const { dispachEditDespesa } = this.props;\n\n    await dispachEditDespesa(expense);\n    this.prencheInput();\n  }\n\n  prencheInput = () => {\n    const { edit } = this.props;\n    this.setState({\n      value: edit.value,\n      description: edit.description,\n      currency: edit.currency,\n      tag: edit.currency,\n      method: edit.method,\n    });\n  }\n\n  render() {\n    const { siglas, listExpenses, removeItem, edit } = this.props;\n    const { value, description, method, tag, currency } = this.state;\n    console.log(edit);\n    return (\n      <div className=\"all-containter-wallet\">\n        <Header />\n        { edit ? <FormAlteracao\n          value={ value }\n          onHandleChange={ this.onHandleChange }\n          description={ description }\n          siglas={ siglas }\n          currency={ currency }\n          method={ method }\n          tag={ tag }\n          onClickDespesas={ this.onClickAlterar }\n          text=\"Editar despesa\"\n        />\n          : (\n            <FormInclusao\n              value={ value }\n              onHandleChange={ this.onHandleChange }\n              description={ description }\n              siglas={ siglas }\n              method={ method }\n              tag={ tag }\n              onClickDespesas={ this.onClickDespesas }\n              text=\"Adicionar\"\n              currency={ currency }\n            />\n          )}\n        <div className=\"container-table\">\n\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Descrição</th>\n                <th scope=\"col\">Tag</th>\n                <th scope=\"col\">Método de pagamento</th>\n                <th scope=\"col\">Valor</th>\n                <th scope=\"col\">Moeda</th>\n                <th scope=\"col\">Câmbio utilizado</th>\n                <th scope=\"col\">Valor convertido</th>\n                <th scope=\"col\">Moeda de conversão</th>\n                <th scope=\"col\">Editar/Excluir</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n                listExpenses.length > 0 && listExpenses.map((expense) => (\n                  <tr key={ expense.id }>\n                    <td className=\"td-descripion\">{expense.description}</td>\n                    <td>{expense.tag}</td>\n                    <td>{expense.method}</td>\n                    <td>{Number(expense.value).toFixed(2)}</td>\n                    <td>{expense.exchangeRates[expense.currency].name}</td>\n                    <td>\n                      {Number(expense\n                        .exchangeRates[expense.currency].ask).toFixed(2)}\n\n                    </td>\n                    <td>\n                      {((Number(expense\n                        .exchangeRates[expense.currency]\n                        .ask)) * Number(expense.value)).toFixed(2)}\n\n                    </td>\n\n                    <td className=\"td-Real\">Real</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        data-testid=\"edit-btn\"\n                        onClick={ (event) => this.buttonEdit(event, expense) }\n                        className=\"button-edit\"\n                      >\n                        <img src={ imgEdit } width=\"20px\" alt=\"buttao-edit\" />\n\n                      </button>\n                      <button\n                        type=\"button\"\n                        data-testid=\"delete-btn\"\n                        onClick={ () => removeItem(expense.id) }\n                        className=\"button-excluir\"\n                      >\n                        <img src={ imgExcluir } width=\"20px\" alt=\"buttao-excluir\" />\n\n                      </button>\n                    </td>\n                  </tr>\n                ))\n              }\n            </tbody>\n          </table>\n        </div>\n\n      </div>);\n  }\n}\nconst mapStateToProps = (state) => ({\n  siglas: state.wallet.currencies,\n  listExpenses: state.wallet.expenses,\n  edit: state.wallet.edit,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addListCorrices: () => dispatch(fecthApiCorrencies()),\n  listDespesas: (despesas) => dispatch(addDepesas(despesas)),\n  removeItem: (id) => dispatch(removeDepesa(id)),\n  dispachEditDespesa: (dispesa) => dispatch(editDispesa(dispesa)),\n  dispachSalvarEdit: (despesaEdit) => dispatch(salvarEdit(despesaEdit)),\n\n});\n\nWallet.propTypes = {\n  addListCorrices: PropTypes.func.isRequired,\n  siglas: PropTypes.arrayOf(PropTypes.string).isRequired,\n  listDespesas: PropTypes.func.isRequired,\n  listExpenses: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  removeItem: PropTypes.func.isRequired,\n  dispachEditDespesa: PropTypes.func.isRequired,\n  dispachSalvarEdit: PropTypes.func.isRequired,\n  edit: PropTypes.shape(PropTypes.string),\n\n};\nWallet.defaultProps = {\n  edit: { },\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/login/Login';\nimport Wallet from './pages/Wallet/Wallet';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"all-container\">\n\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route exact path=\"/carteira\" component={ Wallet } />\n      </Switch>\n    </div>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nconst INITIAL_STATE = {\n  email: '',\n};\n\nfunction user(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case 'ADD_EMAIL':\n    return {\n      ...state,\n      email: action.payload,\n    };\n  default:\n    return state;\n  }\n}\nexport default user;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  edit: null,\n};\n\nfunction wallet(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case 'FECTH_CORRENCIES':\n    return {\n      ...state,\n      currencies: action.payload,\n    };\n  case 'ADD_DEPESAS':\n    return {\n      ...state,\n      expenses: [...state.expenses, action.payload],\n    };\n  case 'REMOVE_DEPESA':\n    return {\n      ...state,\n      expenses: state.expenses.filter((expense) => expense.id !== action.payload),\n    };\n  case 'EDIT_DESPESA':\n    // console.log('EDIT_DESPESA', action.payload);\n    return {\n      ...state,\n      edit: action.payload,\n    };\n  case 'SALVE_EDIT':\n    console.log('SALVE_EDIT', action.payload);\n    console.log(state.edit.id);\n    return {\n      ...state,\n      expenses: state.expenses.map((expense) => {\n        console.log('case1:', expense.id, action.payload.id);\n        console.log('case2:', expense.id, state.edit.id);\n        if (expense.id === state.edit.id) {\n          // console.log('SALVE_EDIT', expense);\n          // console.log(expense.id, action.payload.value);\n          expense.value = action.payload.value;\n          expense.description = action.payload.description;\n          expense.currency = action.payload.currency;\n          expense.method = action.payload.method;\n          expense.tag = action.payload.tag;\n        }\n        return expense;\n      }),\n      edit: null,\n    };\n  default:\n    return state;\n  }\n}\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\nconst rootReducer = combineReducers({ user, wallet });\nexport default rootReducer;\n","// import { combineStore } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\n// const store = createStore\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <BrowserRouter  basename={process.env.PUBLIC_URL}>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}